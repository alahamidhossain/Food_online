{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';// Reducers\nimport{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer}from'./reducers/userReducers';import{menuItemListReducer,menuItemDetailsReducer,menuItemCreateReducer,menuItemUpdateReducer,menuItemDeleteReducer}from'./reducers/menuItemReducers';import{cartReducer}from'./reducers/cartReducers';import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,orderListReducer,orderUpdateStatusReducer}from'./reducers/orderReducers';const reducer=combineReducers({userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,menuItemList:menuItemListReducer,menuItemDetails:menuItemDetailsReducer,menuItemCreate:menuItemCreateReducer,menuItemUpdate:menuItemUpdateReducer,menuItemDelete:menuItemDeleteReducer,cart:cartReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderListMy:orderListMyReducer,orderList:orderListReducer,orderUpdateStatus:orderUpdateStatusReducer});// Get user info from localStorage\nconst userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;// Helper function to get user-specific localStorage keys\nconst getUserKey=key=>{if(userInfoFromStorage&&userInfoFromStorage._id){return`${key}_${userInfoFromStorage._id}`;}return`guest${key}`;};// Get cart items from localStorage (user-specific)\nconst cartItemsFromStorage=userInfoFromStorage?localStorage.getItem(getUserKey('cartItems'))?JSON.parse(localStorage.getItem(getUserKey('cartItems'))):[]:localStorage.getItem('guestCartItems')?JSON.parse(localStorage.getItem('guestCartItems')):[];// Get shipping address from localStorage (user-specific)\nconst shippingAddressFromStorage=userInfoFromStorage?localStorage.getItem(getUserKey('shippingAddress'))?JSON.parse(localStorage.getItem(getUserKey('shippingAddress'))):{}:localStorage.getItem('guestShippingAddress')?JSON.parse(localStorage.getItem('guestShippingAddress')):{};// Get payment method from localStorage (user-specific)\nconst paymentMethodFromStorage=userInfoFromStorage?localStorage.getItem(getUserKey('paymentMethod'))?JSON.parse(localStorage.getItem(getUserKey('paymentMethod'))):'':localStorage.getItem('guestPaymentMethod')?JSON.parse(localStorage.getItem('guestPaymentMethod')):'';// Get coupon from localStorage (user-specific)\nconst couponFromStorage=userInfoFromStorage?localStorage.getItem(getUserKey('coupon'))?JSON.parse(localStorage.getItem(getUserKey('coupon'))):null:localStorage.getItem('guestCoupon')?JSON.parse(localStorage.getItem('guestCoupon')):null;// Log initial cart state for debugging\nconsole.log('User info from storage:',userInfoFromStorage);console.log('Cart items from storage:',cartItemsFromStorage);console.log('Shipping address from storage:',shippingAddressFromStorage);console.log('Payment method from storage:',paymentMethodFromStorage);const initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage,paymentMethod:paymentMethodFromStorage,coupon:couponFromStorage},userLogin:{userInfo:userInfoFromStorage}};const middleware=[thunk];const store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));export default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","menuItemListReducer","menuItemDetailsReducer","menuItemCreateReducer","menuItemUpdateReducer","menuItemDeleteReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderUpdateStatusReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","menuItemList","menuItemDetails","menuItemCreate","menuItemUpdate","menuItemDelete","cart","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderUpdateStatus","userInfoFromStorage","localStorage","getItem","JSON","parse","getUserKey","key","_id","cartItemsFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","couponFromStorage","console","log","initialState","cartItems","shippingAddress","paymentMethod","coupon","userInfo","middleware","store"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Reducers\nimport { \n  userLoginReducer, \n  userRegisterReducer, \n  userDetailsReducer, \n  userUpdateProfileReducer \n} from './reducers/userReducers';\nimport { \n  menuItemListReducer, \n  menuItemDetailsReducer,\n  menuItemCreateReducer,\n  menuItemUpdateReducer,\n  menuItemDeleteReducer\n} from './reducers/menuItemReducers';\nimport { \n  cartReducer \n} from './reducers/cartReducers';\nimport { \n  orderCreateReducer, \n  orderDetailsReducer, \n  orderPayReducer, \n  orderListMyReducer,\n  orderListReducer,\n  orderUpdateStatusReducer\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  menuItemList: menuItemListReducer,\n  menuItemDetails: menuItemDetailsReducer,\n  menuItemCreate: menuItemCreateReducer,\n  menuItemUpdate: menuItemUpdateReducer,\n  menuItemDelete: menuItemDeleteReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderUpdateStatus: orderUpdateStatusReducer\n});\n\n// Get user info from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\n// Helper function to get user-specific localStorage keys\nconst getUserKey = (key) => {\n  if (userInfoFromStorage && userInfoFromStorage._id) {\n    return `${key}_${userInfoFromStorage._id}`;\n  }\n  return `guest${key}`;\n};\n\n// Get cart items from localStorage (user-specific)\nconst cartItemsFromStorage = userInfoFromStorage\n  ? localStorage.getItem(getUserKey('cartItems'))\n    ? JSON.parse(localStorage.getItem(getUserKey('cartItems')))\n    : []\n  : localStorage.getItem('guestCartItems')\n    ? JSON.parse(localStorage.getItem('guestCartItems'))\n    : [];\n\n// Get shipping address from localStorage (user-specific)\nconst shippingAddressFromStorage = userInfoFromStorage\n  ? localStorage.getItem(getUserKey('shippingAddress'))\n    ? JSON.parse(localStorage.getItem(getUserKey('shippingAddress')))\n    : {}\n  : localStorage.getItem('guestShippingAddress')\n    ? JSON.parse(localStorage.getItem('guestShippingAddress'))\n    : {};\n\n// Get payment method from localStorage (user-specific)\nconst paymentMethodFromStorage = userInfoFromStorage\n  ? localStorage.getItem(getUserKey('paymentMethod'))\n    ? JSON.parse(localStorage.getItem(getUserKey('paymentMethod')))\n    : ''\n  : localStorage.getItem('guestPaymentMethod')\n    ? JSON.parse(localStorage.getItem('guestPaymentMethod'))\n    : '';\n\n// Get coupon from localStorage (user-specific)\nconst couponFromStorage = userInfoFromStorage\n  ? localStorage.getItem(getUserKey('coupon'))\n    ? JSON.parse(localStorage.getItem(getUserKey('coupon')))\n    : null\n  : localStorage.getItem('guestCoupon')\n    ? JSON.parse(localStorage.getItem('guestCoupon'))\n    : null;\n\n// Log initial cart state for debugging\nconsole.log('User info from storage:', userInfoFromStorage);\nconsole.log('Cart items from storage:', cartItemsFromStorage);\nconsole.log('Shipping address from storage:', shippingAddressFromStorage);\nconsole.log('Payment method from storage:', paymentMethodFromStorage);\n\nconst initialState = {\n  cart: { \n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n    coupon: couponFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}