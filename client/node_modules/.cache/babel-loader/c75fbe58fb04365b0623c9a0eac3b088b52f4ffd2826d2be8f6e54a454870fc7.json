{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{Table,Button,Row,Col,Form,Modal}from'react-bootstrap';import{LinkContainer}from'react-router-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import AdminNav from'../components/AdminNav';import{listOrders,updateOrderStatus}from'../actions/orderActions';import{ORDER_UPDATE_STATUS_RESET}from'../constants/orderConstants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminOrdersPage=()=>{const[showModal,setShowModal]=useState(false);const[selectedOrder,setSelectedOrder]=useState(null);const[status,setStatus]=useState('');const dispatch=useDispatch();const navigate=useNavigate();const userLogin=useSelector(state=>state.userLogin);const{userInfo}=userLogin;const orderList=useSelector(state=>state.orderList);const{loading,error,orders}=orderList;const orderUpdateStatus=useSelector(state=>state.orderUpdateStatus);const{loading:loadingUpdate,error:errorUpdate,success:successUpdate}=orderUpdateStatus;useEffect(()=>{// Check if user is admin\nif(!userInfo||userInfo.role!=='admin'){navigate('/login');return;}if(successUpdate){dispatch({type:ORDER_UPDATE_STATUS_RESET});setShowModal(false);}dispatch(listOrders());},[dispatch,navigate,userInfo,successUpdate]);const updateStatusHandler=order=>{setSelectedOrder(order);setStatus(order.status);setShowModal(true);};const submitHandler=e=>{e.preventDefault();dispatch(updateOrderStatus(selectedOrder._id,status));};const closeModal=()=>{setShowModal(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Orders\"})})}),/*#__PURE__*/_jsx(AdminNav,{}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,responsive:true,className:\"table-sm mt-4\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"USER\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DATE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TOTAL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DELIVERY TYPE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"STATUS\"}),/*#__PURE__*/_jsx(\"th\",{children:\"ACTIONS\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders&&orders.map(order=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:order.user_id.name}),/*#__PURE__*/_jsx(\"td\",{children:new Date(order.created_at).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",order.total_price]}),/*#__PURE__*/_jsx(\"td\",{children:order.delivery_type}),/*#__PURE__*/_jsx(\"td\",{children:order.status==='completed'?/*#__PURE__*/_jsx(\"span\",{className:\"text-success\",children:order.status}):order.status==='cancelled'?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:order.status}):/*#__PURE__*/_jsx(\"span\",{className:\"text-warning\",children:order.status})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(LinkContainer,{to:`/order/${order._id}`,children:/*#__PURE__*/_jsx(Button,{variant:\"light\",className:\"btn-sm me-2\",children:\"Details\"})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"btn-sm\",onClick:()=>updateStatusHandler(order),children:\"Update Status\"})]})]},order._id))})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:closeModal,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Update Order Status\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:loadingUpdate?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"status\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Status\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:status,onChange:e=>setStatus(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"processing\",children:\"Processing\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cancelled\",children:\"Cancelled\"})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})})]})]});};export default AdminOrdersPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Table","Button","Row","Col","Form","Modal","LinkContainer","useDispatch","useSelector","Message","Loader","AdminNav","listOrders","updateOrderStatus","ORDER_UPDATE_STATUS_RESET","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminOrdersPage","showModal","setShowModal","selectedOrder","setSelectedOrder","status","setStatus","dispatch","navigate","userLogin","state","userInfo","orderList","loading","error","orders","orderUpdateStatus","loadingUpdate","errorUpdate","success","successUpdate","role","type","updateStatusHandler","order","submitHandler","e","preventDefault","_id","closeModal","children","className","variant","striped","bordered","hover","responsive","map","user_id","name","Date","created_at","toLocaleDateString","total_price","delivery_type","to","onClick","show","onHide","Header","closeButton","Title","Body","onSubmit","Group","controlId","Label","Control","as","value","onChange","target"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/pages/AdminOrdersPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Table, Button, Row, Col, Form, Modal } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport AdminNav from '../components/AdminNav';\nimport { listOrders, updateOrderStatus } from '../actions/orderActions';\nimport { ORDER_UPDATE_STATUS_RESET } from '../constants/orderConstants';\n\nconst AdminOrdersPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [status, setStatus] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const orderUpdateStatus = useSelector((state) => state.orderUpdateStatus);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = orderUpdateStatus;\n\n  useEffect(() => {\n    // Check if user is admin\n    if (!userInfo || userInfo.role !== 'admin') {\n      navigate('/login');\n      return;\n    }\n\n    if (successUpdate) {\n      dispatch({ type: ORDER_UPDATE_STATUS_RESET });\n      setShowModal(false);\n    }\n\n    dispatch(listOrders());\n  }, [dispatch, navigate, userInfo, successUpdate]);\n\n  const updateStatusHandler = (order) => {\n    setSelectedOrder(order);\n    setStatus(order.status);\n    setShowModal(true);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateOrderStatus(selectedOrder._id, status));\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Orders</h1>\n        </Col>\n      </Row>\n      \n      <AdminNav />\n      \n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm mt-4\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>DELIVERY TYPE</th>\n              <th>STATUS</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders && orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user_id.name}</td>\n                <td>{new Date(order.created_at).toLocaleDateString()}</td>\n                <td>${order.total_price}</td>\n                <td>{order.delivery_type}</td>\n                <td>\n                  {order.status === 'completed' ? (\n                    <span className=\"text-success\">{order.status}</span>\n                  ) : order.status === 'cancelled' ? (\n                    <span className=\"text-danger\">{order.status}</span>\n                  ) : (\n                    <span className=\"text-warning\">{order.status}</span>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm me-2\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn-sm\"\n                    onClick={() => updateStatusHandler(order)}\n                  >\n                    Update Status\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n\n      {/* Update Status Modal */}\n      <Modal show={showModal} onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Order Status</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {loadingUpdate ? (\n            <Loader />\n          ) : (\n            <>\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"status\" className=\"mb-3\">\n                  <Form.Label>Status</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                  >\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"processing\">Processing</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"cancelled\">Cancelled</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                  Update\n                </Button>\n              </Form>\n            </>\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default AdminOrdersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}