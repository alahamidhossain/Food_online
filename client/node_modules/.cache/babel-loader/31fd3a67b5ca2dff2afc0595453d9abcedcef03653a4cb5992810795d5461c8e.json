{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Reducers\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { menuItemListReducer, menuItemDetailsReducer, menuItemCreateReducer, menuItemUpdateReducer, menuItemDeleteReducer } from './reducers/menuItemReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  menuItemList: menuItemListReducer,\n  menuItemDetails: menuItemDetailsReducer,\n  menuItemCreate: menuItemCreateReducer,\n  menuItemUpdate: menuItemUpdateReducer,\n  menuItemDelete: menuItemDeleteReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\n\n// Get cart items from localStorage\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\n// Get user info from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","menuItemListReducer","menuItemDetailsReducer","menuItemCreateReducer","menuItemUpdateReducer","menuItemDeleteReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","menuItemList","menuItemDetails","menuItemCreate","menuItemUpdate","menuItemDelete","cart","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Reducers\nimport { \n  userLoginReducer, \n  userRegisterReducer, \n  userDetailsReducer, \n  userUpdateProfileReducer \n} from './reducers/userReducers';\nimport { \n  menuItemListReducer, \n  menuItemDetailsReducer,\n  menuItemCreateReducer,\n  menuItemUpdateReducer,\n  menuItemDeleteReducer\n} from './reducers/menuItemReducers';\nimport { \n  cartReducer \n} from './reducers/cartReducers';\nimport { \n  orderCreateReducer, \n  orderDetailsReducer, \n  orderPayReducer, \n  orderListMyReducer \n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  menuItemList: menuItemListReducer,\n  menuItemDetails: menuItemDetailsReducer,\n  menuItemCreate: menuItemCreateReducer,\n  menuItemUpdate: menuItemUpdateReducer,\n  menuItemDelete: menuItemDeleteReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\n// Get cart items from localStorage\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\n// Get user info from localStorage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,QACnB,yBAAyB;AAChC,SACEC,mBAAmB,EACnBC,sBAAsB,EACtBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,QAChB,6BAA6B;AACpC,SACEC,WAAW,QACN,yBAAyB;AAChC,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,QACb,0BAA0B;AAEjC,MAAMC,OAAO,GAAGlB,eAAe,CAAC;EAC9BmB,SAAS,EAAEf,gBAAgB;EAC3BgB,YAAY,EAAEf,mBAAmB;EACjCgB,WAAW,EAAEf,kBAAkB;EAC/BgB,iBAAiB,EAAEf,wBAAwB;EAC3CgB,YAAY,EAAEf,mBAAmB;EACjCgB,eAAe,EAAEf,sBAAsB;EACvCgB,cAAc,EAAEf,qBAAqB;EACrCgB,cAAc,EAAEf,qBAAqB;EACrCgB,cAAc,EAAEf,qBAAqB;EACrCgB,IAAI,EAAEf,WAAW;EACjBgB,WAAW,EAAEf,kBAAkB;EAC/BgB,YAAY,EAAEf,mBAAmB;EACjCgB,QAAQ,EAAEf,eAAe;EACzBgB,WAAW,EAAEf;AACf,CAAC,CAAC;;AAEF;AACA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;;AAEN;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,YAAY,GAAG;EACnBX,IAAI,EAAE;IAAEY,SAAS,EAAEP;EAAqB,CAAC;EACzCd,SAAS,EAAE;IAAEsB,QAAQ,EAAEH;EAAoB;AAC7C,CAAC;AAED,MAAMI,UAAU,GAAG,CAACxC,KAAK,CAAC;AAE1B,MAAMyC,KAAK,GAAG5C,WAAW,CACvBmB,OAAO,EACPqB,YAAY,EACZpC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}