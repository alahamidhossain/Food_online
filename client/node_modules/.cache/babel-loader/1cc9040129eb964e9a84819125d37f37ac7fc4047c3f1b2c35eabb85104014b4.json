{"ast":null,"code":"import axios from 'axios';\nimport { MENU_ITEM_LIST_REQUEST, MENU_ITEM_LIST_SUCCESS, MENU_ITEM_LIST_FAIL, MENU_ITEM_DETAILS_REQUEST, MENU_ITEM_DETAILS_SUCCESS, MENU_ITEM_DETAILS_FAIL, MENU_ITEM_CREATE_REQUEST, MENU_ITEM_CREATE_SUCCESS, MENU_ITEM_CREATE_FAIL, MENU_ITEM_UPDATE_REQUEST, MENU_ITEM_UPDATE_SUCCESS, MENU_ITEM_UPDATE_FAIL, MENU_ITEM_DELETE_REQUEST, MENU_ITEM_DELETE_SUCCESS, MENU_ITEM_DELETE_FAIL } from '../constants/menuItemConstants';\n\n// List menu items action\nexport const listMenuItems = (category = '') => async dispatch => {\n  try {\n    dispatch({\n      type: MENU_ITEM_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(category ? `/api/menu-items?category=${category}` : '/api/menu-items');\n    dispatch({\n      type: MENU_ITEM_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Get menu item details action\nexport const getMenuItemDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: MENU_ITEM_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/menu-items/${id}`);\n    dispatch({\n      type: MENU_ITEM_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Create menu item action (admin only)\nexport const createMenuItem = menuItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MENU_ITEM_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/menu-items', menuItem, config);\n    dispatch({\n      type: MENU_ITEM_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Update menu item action (admin only)\nexport const updateMenuItem = menuItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MENU_ITEM_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/menu-items/${menuItem._id}`, menuItem, config);\n    dispatch({\n      type: MENU_ITEM_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Delete menu item action (admin only)\nexport const deleteMenuItem = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MENU_ITEM_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/menu-items/${id}`, config);\n    dispatch({\n      type: MENU_ITEM_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","MENU_ITEM_LIST_REQUEST","MENU_ITEM_LIST_SUCCESS","MENU_ITEM_LIST_FAIL","MENU_ITEM_DETAILS_REQUEST","MENU_ITEM_DETAILS_SUCCESS","MENU_ITEM_DETAILS_FAIL","MENU_ITEM_CREATE_REQUEST","MENU_ITEM_CREATE_SUCCESS","MENU_ITEM_CREATE_FAIL","MENU_ITEM_UPDATE_REQUEST","MENU_ITEM_UPDATE_SUCCESS","MENU_ITEM_UPDATE_FAIL","MENU_ITEM_DELETE_REQUEST","MENU_ITEM_DELETE_SUCCESS","MENU_ITEM_DELETE_FAIL","listMenuItems","category","dispatch","type","data","get","payload","error","response","message","getMenuItemDetails","id","createMenuItem","menuItem","getState","userLogin","userInfo","config","headers","Authorization","token","post","updateMenuItem","put","_id","deleteMenuItem","delete"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/actions/menuItemActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  MENU_ITEM_LIST_REQUEST,\n  MENU_ITEM_LIST_SUCCESS,\n  MENU_ITEM_LIST_FAIL,\n  MENU_ITEM_DETAILS_REQUEST,\n  MENU_ITEM_DETAILS_SUCCESS,\n  MENU_ITEM_DETAILS_FAIL,\n  MENU_ITEM_CREATE_REQUEST,\n  MENU_ITEM_CREATE_SUCCESS,\n  MENU_ITEM_CREATE_FAIL,\n  MENU_ITEM_UPDATE_REQUEST,\n  MENU_ITEM_UPDATE_SUCCESS,\n  MENU_ITEM_UPDATE_FAIL,\n  MENU_ITEM_DELETE_REQUEST,\n  MENU_ITEM_DELETE_SUCCESS,\n  MENU_ITEM_DELETE_FAIL\n} from '../constants/menuItemConstants';\n\n// List menu items action\nexport const listMenuItems = (category = '') => async (dispatch) => {\n  try {\n    dispatch({ type: MENU_ITEM_LIST_REQUEST });\n\n    const { data } = await axios.get(\n      category ? `/api/menu-items?category=${category}` : '/api/menu-items'\n    );\n\n    dispatch({\n      type: MENU_ITEM_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Get menu item details action\nexport const getMenuItemDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: MENU_ITEM_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/menu-items/${id}`);\n\n    dispatch({\n      type: MENU_ITEM_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Create menu item action (admin only)\nexport const createMenuItem = (menuItem) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MENU_ITEM_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('/api/menu-items', menuItem, config);\n\n    dispatch({\n      type: MENU_ITEM_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Update menu item action (admin only)\nexport const updateMenuItem = (menuItem) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MENU_ITEM_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/menu-items/${menuItem._id}`,\n      menuItem,\n      config\n    );\n\n    dispatch({\n      type: MENU_ITEM_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Delete menu item action (admin only)\nexport const deleteMenuItem = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MENU_ITEM_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/menu-items/${id}`, config);\n\n    dispatch({\n      type: MENU_ITEM_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_ITEM_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}