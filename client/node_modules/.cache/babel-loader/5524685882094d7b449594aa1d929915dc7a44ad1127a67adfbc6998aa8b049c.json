{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport { transferGuestCart, loadUserCart } from './cartActions';\n\n// Helper function to get user-specific localStorage keys\nconst getUserKey = userId => key => `${key}_${userId}`;\n\n// Login action\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n\n    // Transfer any guest cart items to the user's cart\n    dispatch(transferGuestCart());\n\n    // Load the user's cart from the server\n    dispatch(loadUserCart());\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Logout action\nexport const logout = () => dispatch => {\n  // Get user ID before removing userInfo\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n  const userId = userInfo === null || userInfo === void 0 ? void 0 : userInfo._id;\n\n  // Clear user data from localStorage\n  localStorage.removeItem('userInfo');\n\n  // Clear user-specific cart data if we have a userId\n  if (userId) {\n    const getUserKeyWithId = getUserKey(userId);\n    localStorage.removeItem(getUserKeyWithId('cartItems'));\n    localStorage.removeItem(getUserKeyWithId('shippingAddress'));\n    localStorage.removeItem(getUserKeyWithId('paymentMethod'));\n    localStorage.removeItem(getUserKeyWithId('coupon'));\n  }\n\n  // Clear Redux state\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: CART_CLEAR_ITEMS\n  });\n\n  // Redirect to home page\n  window.location.href = '/';\n};\n\n// Register action\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    // Auto login after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n\n    // Transfer any guest cart items to the new user's cart\n    dispatch(transferGuestCart());\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Get user details action\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Update user profile action\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n\n    // Update login state with new user data\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","ORDER_LIST_MY_RESET","CART_CLEAR_ITEMS","transferGuestCart","loadUserCart","getUserKey","userId","key","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","userInfo","parse","getItem","_id","removeItem","getUserKeyWithId","window","location","href","register","name","getUserDetails","id","getState","userLogin","Authorization","token","get","updateUserProfile","user","put"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL\n} from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport { transferGuestCart, loadUserCart } from './cartActions';\n\n// Helper function to get user-specific localStorage keys\nconst getUserKey = (userId) => (key) => `${key}_${userId}`;\n\n// Login action\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    \n    // Transfer any guest cart items to the user's cart\n    dispatch(transferGuestCart());\n    \n    // Load the user's cart from the server\n    dispatch(loadUserCart());\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Logout action\nexport const logout = () => (dispatch) => {\n  // Get user ID before removing userInfo\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n  const userId = userInfo?._id;\n  \n  // Clear user data from localStorage\n  localStorage.removeItem('userInfo');\n  \n  // Clear user-specific cart data if we have a userId\n  if (userId) {\n    const getUserKeyWithId = getUserKey(userId);\n    localStorage.removeItem(getUserKeyWithId('cartItems'));\n    localStorage.removeItem(getUserKeyWithId('shippingAddress'));\n    localStorage.removeItem(getUserKeyWithId('paymentMethod'));\n    localStorage.removeItem(getUserKeyWithId('coupon'));\n  }\n  \n  // Clear Redux state\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: CART_CLEAR_ITEMS });\n  \n  // Redirect to home page\n  window.location.href = '/';\n};\n\n// Register action\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    // Auto login after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    \n    // Transfer any guest cart items to the new user's cart\n    dispatch(transferGuestCart());\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Get user details action\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Update user profile action\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put('/api/users/profile', user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    // Update login state with new user data\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}