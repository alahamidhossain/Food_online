{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_ITEM_QUANTITY, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS, CART_APPLY_COUPON, CART_REMOVE_COUPON } from '../constants/cartConstants';\n\n// Add item to cart action\nexport const addToCart = (id, quantity, specialInstructions = '') => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/menu-items/${id}`);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        menuItem: data._id,\n        name: data.name,\n        image: data.image_url,\n        price: data.price,\n        qty: quantity,\n        specialInstructions\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.error('Error adding item to cart:', error);\n  }\n};\n\n// Update cart item quantity action\nexport const updateCartItemQuantity = (id, qty) => (dispatch, getState) => {\n  dispatch({\n    type: CART_UPDATE_ITEM_QUANTITY,\n    payload: {\n      menuItem: id,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n// Remove item from cart action\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n// Save shipping address action\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\n// Save payment method action\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n\n// Apply coupon action\nexport const applyCoupon = couponCode => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/coupons/${couponCode}`, config);\n    if (data) {\n      dispatch({\n        type: CART_APPLY_COUPON,\n        payload: {\n          code: data.code,\n          discountPercent: data.discount_percent,\n          minOrderAmount: data.min_order_amount,\n          expiryDate: data.expiry_date\n        }\n      });\n      localStorage.setItem('coupon', JSON.stringify({\n        code: data.code,\n        discountPercent: data.discount_percent,\n        minOrderAmount: data.min_order_amount,\n        expiryDate: data.expiry_date\n      }));\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error applying coupon:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw error;\n  }\n};\n\n// Remove coupon action\nexport const removeCoupon = () => dispatch => {\n  dispatch({\n    type: CART_REMOVE_COUPON\n  });\n  localStorage.removeItem('coupon');\n};\n\n// Clear cart items action\nexport const clearCart = () => dispatch => {\n  dispatch({\n    type: CART_CLEAR_ITEMS\n  });\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('coupon');\n};","map":{"version":3,"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_UPDATE_ITEM_QUANTITY","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","CART_APPLY_COUPON","CART_REMOVE_COUPON","addToCart","id","quantity","specialInstructions","dispatch","getState","data","get","type","payload","menuItem","_id","name","image","image_url","price","qty","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","updateCartItemQuantity","removeFromCart","saveShippingAddress","savePaymentMethod","applyCoupon","couponCode","userLogin","userInfo","config","headers","Authorization","token","code","discountPercent","discount_percent","minOrderAmount","min_order_amount","expiryDate","expiry_date","_error$response","_error$response$data","response","message","removeCoupon","removeItem","clearCart"],"sources":["C:/Users/HP/CascadeProjects/food-ordering-system/client/src/actions/cartActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_UPDATE_ITEM_QUANTITY,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n  CART_APPLY_COUPON,\n  CART_REMOVE_COUPON\n} from '../constants/cartConstants';\n\n// Add item to cart action\nexport const addToCart = (id, quantity, specialInstructions = '') => async (dispatch, getState) => {\n  try {\n    const { data } = await axios.get(`/api/menu-items/${id}`);\n\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        menuItem: data._id,\n        name: data.name,\n        image: data.image_url,\n        price: data.price,\n        qty: quantity,\n        specialInstructions,\n      },\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.error('Error adding item to cart:', error);\n  }\n};\n\n// Update cart item quantity action\nexport const updateCartItemQuantity = (id, qty) => (dispatch, getState) => {\n  dispatch({\n    type: CART_UPDATE_ITEM_QUANTITY,\n    payload: {\n      menuItem: id,\n      qty,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n// Remove item from cart action\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n// Save shipping address action\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\n// Save payment method action\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n\n// Apply coupon action\nexport const applyCoupon = (couponCode) => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/coupons/${couponCode}`, config);\n\n    if (data) {\n      dispatch({\n        type: CART_APPLY_COUPON,\n        payload: {\n          code: data.code,\n          discountPercent: data.discount_percent,\n          minOrderAmount: data.min_order_amount,\n          expiryDate: data.expiry_date,\n        },\n      });\n\n      localStorage.setItem('coupon', JSON.stringify({\n        code: data.code,\n        discountPercent: data.discount_percent,\n        minOrderAmount: data.min_order_amount,\n        expiryDate: data.expiry_date,\n      }));\n    }\n  } catch (error) {\n    console.error('Error applying coupon:', error.response?.data?.message || error.message);\n    throw error;\n  }\n};\n\n// Remove coupon action\nexport const removeCoupon = () => (dispatch) => {\n  dispatch({\n    type: CART_REMOVE_COUPON,\n  });\n\n  localStorage.removeItem('coupon');\n};\n\n// Clear cart items action\nexport const clearCart = () => (dispatch) => {\n  dispatch({\n    type: CART_CLEAR_ITEMS,\n  });\n\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('coupon');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}